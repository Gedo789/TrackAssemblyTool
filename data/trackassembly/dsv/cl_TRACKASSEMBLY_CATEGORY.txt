# StoreExternalCategory( 3 ): 01/19/17 00:07:38 [ LUA ]
[===[SligWolf's Minis===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/minitrains/",""):gsub("_","/")
    local s = r:find("/") or r:find("%.");
    r = (s and r:sub(1,s-1) or "other"); o = {r}
    if(r == "sw") then o = {"buffer"} end;
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[Ron's 2ft track pack===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/ron/2ft/","")
    local s, o, n = r:find("/")
    local g = s and r:sub(1,s-1) or "other"
    if(g == "luajunctions") then
      o = {g}; local e
      n = m:gsub("models/ron/2ft/luajunctions/","")
      n = n:gsub("/junction.mdl",""):gsub("junctions/","junction_")
      e = n:find("/"); n = e and n:sub(1,e-1) or n
    elseif(g == "straight") then
      n, o = r:sub(s+1,-1):gsub("straight_",""):gsub("%.mdl",""), {g}
    elseif(g == "embankment") then
      local e = r:sub(s+1,-1):gsub("embankment_","")
      local s = e:find("%A")
      n, o = e:gsub("%.mdl",""), {g,((s > 1) and (e:sub(1,s-1)) or nil)}
    elseif(g == "ramps") then
      n, o = r:sub(s+1,-1):gsub("ramp_",""):gsub("%.mdl",""), {g}
    elseif(g == "tram") then
      n, o = r:sub(s+1,-1):gsub("tram_",""):gsub("%.mdl",""), {g}
    elseif(g == "turntable") then
      n, o = r:sub(s+1,-1):gsub("turntable_",""):gsub("%.mdl",""), {g}
    elseif(g == "viaduct") then
      n, o = r:sub(s+1,-1):gsub("viaduct_",""):gsub("%.mdl",""), {g}
    elseif(g == "road_crossings") then
      n, o = r:sub(s+1,-1):gsub("road_",""):gsub("%.mdl",""), {g}
    elseif(g == "curves") then
      n, o = r:sub(s+1,-1):gsub("curve_",""):gsub("%.mdl",""), {g}
    else o = {g} end; n = n and ("_"..n):gsub("_%w",conv):sub(2,-1)
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o, n end]===]
[===[G Scale Track Pack===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/gscale/","")
    local s = r:find("/"); r = s and r:sub(1,s-1) or nil
    if    (r == "j") then r = "J-Switcher"
    elseif(r == "s") then r = "S-Switcher"
    elseif(r == "c0512") then r = "Curve 512"
    elseif(r == "ibeam") then r = "Iron Beam"
    elseif(r == "ramp313") then r = "Ramp 313"
    else r = ("_"..r):gsub("_%w", conv):sub(2,-1) end return {r} end]===]
[===[Ron's Minitrain Props===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/ron/minitrains/","")
    local s = r:find("/"); o = {s and r:sub(1,s-1) or "other"}
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[XQM Coaster===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/xqm/coastertrack/",""):gsub("_","/")
    local s = r:find("/"); r = (s and r:sub(1,s-1):gsub("^%l", string.upper) or nil);
    return r and {r} end]===]
[===[Sligwolf's Mini hover tracks===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/sligwolf/minihover/hover_","")
    local s = r:gmatch("%a+"); o = {s and tostring(s()) or "other"}
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[Transrapid===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/ron/maglev/","");
    local s = r:find("/"); r = s and r:sub(1, s-1) or nil
    return {(r and (("_"..r):gsub("_%w",conv):sub(2,-1)) or nil)} end]===]
[===[Battleship's abandoned rails===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/craptrax/","")
    local s = r:find("[^%a]"); r = s and r:sub(1,s-1) or nil
    return {(r and ("_"..r):gsub("_%w",conv):sub(2,-1) or nil)} end]===]
[===[Mr.Train's G-Gauge===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/props/g_gauge/track/g_gauge_track_",""):gsub("%.mdl","")
    local s = r:find("_")
    local o, n = {(s and r:sub(1,s-1) or "other")}, r:sub(s+1,-1)
    if(o[1] == "s") then o[1] = "curves" end
    n = n and ("_"..n):gsub("_%w",conv):sub(2,-1) or nil
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o, n end]===]
[===[Mr.Train's M-Gauge===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/props/m_gauge/track/m_gauge_",""):gsub("_","/")
    local s = r:find("/"); r = tonumber(r:sub(1,1)) and "straight" or (s and r:sub(1,s-1) or "")
    if(r == "") then return nil end; local o = {r}
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[StephenTechno's Buildings===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/buildingspack/",""):gsub("_","/")
    local s = r:find("/"); r = (s and r:sub(1,s-1) or "")
    if  (r:find("emptylots")) then r = "empty_lots"
    elseif(r:find("roadsdw")) then r = r:gsub("roadsdw","double_")
    elseif(r:find("roadsw" )) then r = r:gsub("roadsw" ,"single_") end
    if(r == "") then return nil end; local o = {r}
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[SProps===function(m)
    local r = m:gsub("models/sprops/trans/train/",""):gsub("_","/")
    if(r:find("track/")) then r = r:gsub("track/","") end;
    local s = r:sub(1,1); if(s == "s") then return {"Straight"}
    elseif(s == "t") then return {"Turn"}
    elseif(s == "h") then return {"Ramp"} else return nil end end]===]
[===[Bobster's two feet rails===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r, o = m:gsub("models/bobsters_trains/rails/2ft/",""):gsub("_","/")
    local s = r:find("/"); g = (s and r:sub(1,s-1) or "");
    if(g == "") then return nil end
    if(g == "straight") then
      local r = r:sub(s+1,-1)
      local e = r:find("/"); r = e and r:sub(1,e-1) or nil; o = {g,r}
    elseif(g == "curves") then
      local r = r:sub(s+1,-1); r = r:gsub("curve/","")
      local e = r:find("/"); r = (not tonumber(r:sub(1,1))) and (e and r:sub(1,e-1) or nil) or nil; o = {g,r}
    elseif(g == "switches") then
      local r = r:sub(s+1,-1); r = r:gsub("switch/","")
      local e = r:find("/"); r = e and r:sub(1,e-1) or nil; o = {g,r}
    else o = {g} end
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[PHX Tubes Miscellaneous===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/props_phx/construct/",""):gsub("_","/")
    local s = r:find("/"); o = {s and r:sub(1,s-1) or "other"}
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
[===[XQM Ball Rails===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/xqm/rails/",""):gsub("_","/")
    local s = r:find("/"); r = (s and r:sub(1,s-1):gsub("^%l", string.upper) or nil);
    return r and {r} or nil end]===]
[===[PHX Tubes Plastic===function(m)
    local function conv(x) return " "..x:sub(2,2):upper() end
    local r = m:gsub("models/hunter/","")
    local s = r:find("/"); o = {s and r:sub(1,s-1) or "other"}
    for i = 1, #o do o[i] = ("_"..o[i]):gsub("_%w", conv):sub(2,-1) end; return o end]===]
